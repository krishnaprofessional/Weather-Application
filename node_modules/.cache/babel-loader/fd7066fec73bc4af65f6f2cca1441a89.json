{"ast":null,"code":"var _jsxFileName = \"/Users/kalyankrishna/Documents/my-app/src/components/Weather.js\";\nimport React from \"react\";\n\nvar Weather = function Weather(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4\n    },\n    __self: this\n  }, props.city && props.country && React.createElement(\"p\", {\n    className: \"weather__country\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \" \", props.city, \", \", props.country), props.temperature && React.createElement(\"div\", {\n    className: \"weather__temp\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \" \", props.temperature, \" \", React.createElement(\"p\", {\n    className: \"weather__temp1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"\\xB0\")), props.humidity && React.createElement(\"p\", {\n    className: \"weather__humidity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \" Humidity:\", React.createElement(\"span\", {\n    className: \"weather__humidity1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \" \", props.humidity, \" \")), props.description && React.createElement(\"p\", {\n    className: \"weather__key\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" Conditions:\", React.createElement(\"span\", {\n    className: \"weather__desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" \", props.description, \" \")), props.error && React.createElement(\"p\", {\n    className: \"weather__error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.error));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/kalyankrishna/Documents/my-app/src/components/Weather.js"],"names":["React","Weather","props","city","country","temperature","humidity","description","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,OAApB,IAA+B;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCF,KAAK,CAACC,IAAzC,QAAmDD,KAAK,CAACE,OAAzD,CAFnC,EAMIF,KAAK,CAACG,WAAN,IAAqB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCH,KAAK,CAACG,WAAxC,OAAsD;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAtD,CANzB,EAUIH,KAAK,CAACI,QAAN,IAAkB;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAChB;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwCJ,KAAK,CAACI,QAA9C,MADgB,CAVtB,EAeIJ,KAAK,CAACK,WAAN,IAAqB;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACnB;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCL,KAAK,CAACK,WAAzC,MADmB,CAfzB,EAoBYL,KAAK,CAACM,KAAN,IAAe;AAAG,IAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCN,KAAK,CAACM,KAAtC,CApB3B,CADiB;AAAA,CAArB;;AA2BA,eAAeP,OAAf","sourcesContent":["import React from \"react\";\n\nconst Weather = props => (\n    <div>\n    {\t\n        props.city && props.country && <p className=\"weather__country\"> { props.city }, { props.country }\n        </p> \n      }\n      { \t\n        props.temperature && <div className=\"weather__temp\"> { props.temperature } <p className=\"weather__temp1\">Â°</p>\n        </div> \n      }\n      { \t\n        props.humidity && <p className=\"weather__humidity\"> Humidity: \n          <span className=\"weather__humidity1\"> { props.humidity } </span>\n        </p> \n      }\n \t { \t\n        props.description && <p className=\"weather__key\"> Conditions: \n          <span className=\"weather__desc\"> { props.description } </span>\n      </p> \n      }\n            { \n                props.error && <p className=\"weather__error\">{ props.error }</p>  \n            }\n </div>\n);\n\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}